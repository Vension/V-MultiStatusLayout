// 这里添加下面两行代码。
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'


// 定义两个链接，下面会用到。
//项目主页
def siteUrl = 'https://github.com/Vension/V-MultiStateLayout'
//项目的Git仓库的url
def gitUrl = 'https://github.com/Vension/V-MultiStateLayout.git'
//发布到JCenter上的项目名字
def libName = "MultiStateLayout"
//项目描述
def libDesc = ":point_right:A MultiStateLayout for Android PageStatus --Using Builder builder mode chain calls（多状态Layout --使用Builder建造者模式链式调用）"

//发布到组织名称名字，必须填写
//（me.vension.xxx）这样写是不好的，项目名会拼上去
//我手欠然后最后就是这样了，大家引以为戒
//compile 'me.vension.xxx:xxx:1.0.0'
group = "me.vension"// 唯一包名,比如implementation 'me.vension.xxx:1.0.0'中的me.vension就是这里配置的。
// 版本号，下次更新是只需要更改版本号即可
version = "1.0.1"//项目引用的版本号，比如implementation 'me.vension.xxx:1.0.0'中的1.0.0就是这里配置的。
//上面配置后上传至JCenter后的编译路径是这样的： implementation 'me.vension.xxx:1.0.0'


// 生成jar包的task，不需要修改。
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

// 生成jarDoc的task，不需要修改。
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    // destinationDir = file("../javadoc/")
    failOnError false // 忽略注释语法错误，如果用jdk1.8你的注释写的不规范就编译不过。
}


// 文档打包成jar/生成javaDoc的jar，不需要修改。
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

//拷贝javadoc文件 不需要修改。
task copyDoc(type: Copy) {
    from "${buildDir}/docs/"
    into "docs"
}

//上传到JCenter所需要的源码文件 不需要修改。
artifacts {
    archives javadocJar
    archives sourcesJar
}

// 配置maven库，生成POM.xml文件
install {
    repositories.mavenInstaller {
        // 生成pom.xml和参数
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // 项目描述，复制我的话，这里需要修改。
                name libName// 可选，项目名称。
                description libDesc// 可选，项目描述。
                url siteUrl // 项目主页，这里是引用上面定义好。

                // 软件开源协议，现在一般都是Apache License2.0吧，复制我的，这里不需要修改。
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                //填写开发者基本信息，复制我的，这里需要修改。
                developers {
                    developer {
                        id 'vension' // 开发者的id。
                        name 'KevinHu' // 开发者名字。
                        email '2506856664@qq.com' // 开发者邮箱。
                    }
                }

                // SCM，复制我的，这里不需要修改。
                scm {
                    connection gitUrl // Git仓库地址。
                    developerConnection gitUrl // Git仓库地址。
                    url siteUrl // 项目主页。
                }

            }
        }
    }
}



// =========================== 上传到JCenter ===================================================

// 这里是读取Bintray相关的信息，我们上传项目到github上的时候会把gradle文件传上去，所以不要把帐号密码的信息直接写在这里，写在local.properties中，这里动态读取。
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")    //Bintray的用户名:读取 local.properties 文件里面的 bintray.user
    key = properties.getProperty("bintray.apikey")   //Bintray的ApiKey:读取 local.properties 文件里面的 bintray.apikey
    configurations = ['archives']
    pkg {
        //注意：这里的repo值必须要和你创建Maven仓库的时候的名字一样
        repo = "vensionCenter"  //Repository名字 需要自己在bintray网站上先添加
        //发布到JCenter上的项目名字
        name = libName
        userOrg = 'vension'//Bintray的组织id
        //项目描述
        desc = libDesc
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true// 是否是公开项目。
    }
}

javadoc {
    options{
        //如果你的项目里面有中文注释的话，必须将格式设置为UTF-8，不然会出现乱码
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
    }
}


/**
 * 执行上传命令
 * 1、打开Android Studio底部工具栏的Terminal，输入命令：
 * windows：gradlew install
 * mac：./gradlew install
 * BUILD SUCCESSFUL说明执行成功。
 * 2、上传到Bintray
 * windows：gradlew bintrayUpload
 * mac：./gradlew bintrayUpload
 * BUILD SUCCESSFUL说明上传成功。
 */










